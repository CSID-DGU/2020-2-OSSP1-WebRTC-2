{"ast":null,"code":"import _slicedToArray from\"/Users/eunyoung/OSSP/2020-2-OSSP1-WebRTC-2-main/conference/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";//https://stackoverflow.com/questions/20926551/recommended-way-of-making-react-component-div-draggable\nimport React,{useState,useEffect,useRef}from'react';var Draggable=function Draggable(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pressed=_useState2[0],setPressed=_useState2[1];var _useState3=useState({x:0,y:0}),_useState4=_slicedToArray(_useState3,2),position=_useState4[0],setPosition=_useState4[1];var ref=useRef();// Monitor changes to position state and update DOM\nuseEffect(function(){if(ref.current){ref.current.style.transform=\"translate(\".concat(position.x,\"px, \").concat(position.y,\"px)\");}},[position]);// Update the current position if mouse is down\nvar onMouseMove=function onMouseMove(event){if(pressed){setPosition({x:position.x+event.movementX,y:position.y+event.movementY});}};return/*#__PURE__*/_jsx(\"div\",{style:props.style,ref:ref,onMouseMove:onMouseMove,onMouseDown:function onMouseDown(){return setPressed(true);},onMouseUp:function onMouseUp(){return setPressed(false);},children:props.children});};export default Draggable;","map":{"version":3,"sources":["/Users/eunyoung/OSSP/2020-2-OSSP1-WebRTC-2-main/conference/src/Components/Cam/Draggable.js"],"names":["React","useState","useEffect","useRef","Draggable","props","pressed","setPressed","x","y","position","setPosition","ref","current","style","transform","onMouseMove","event","movementX","movementY","children"],"mappings":"wLAAA;AACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,KAAmD,OAAnD,CAEA,GAAIC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,KAAK,CAAI,eACOJ,QAAQ,CAAC,KAAD,CADf,wCAChBK,OADgB,eACPC,UADO,8BAESN,QAAQ,CAAC,CAACO,CAAC,CAAE,CAAJ,CAAOC,CAAC,CAAE,CAAV,CAAD,CAFjB,yCAEhBC,QAFgB,eAENC,WAFM,eAGvB,GAAMC,CAAAA,GAAG,CAAGT,MAAM,EAAlB,CAEA;AACAD,SAAS,CAAC,UAAM,CACd,GAAIU,GAAG,CAACC,OAAR,CAAiB,CACfD,GAAG,CAACC,OAAJ,CAAYC,KAAZ,CAAkBC,SAAlB,qBAA2CL,QAAQ,CAACF,CAApD,gBAA4DE,QAAQ,CAACD,CAArE,QACD,CACF,CAJQ,CAIN,CAACC,QAAD,CAJM,CAAT,CAMA;AACA,GAAMM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7B,GAAIX,OAAJ,CAAa,CACXK,WAAW,CAAC,CACVH,CAAC,CAAEE,QAAQ,CAACF,CAAT,CAAaS,KAAK,CAACC,SADZ,CAEVT,CAAC,CAAEC,QAAQ,CAACD,CAAT,CAAaQ,KAAK,CAACE,SAFZ,CAAD,CAAX,CAID,CACF,CAPD,CASA,mBACE,YACE,KAAK,CAAEd,KAAK,CAACS,KADf,CAEE,GAAG,CAAGF,GAFR,CAGE,WAAW,CAAGI,WAHhB,CAIE,WAAW,CAAG,6BAAMT,CAAAA,UAAU,CAAC,IAAD,CAAhB,EAJhB,CAKE,SAAS,CAAG,2BAAMA,CAAAA,UAAU,CAAC,KAAD,CAAhB,EALd,UAMGF,KAAK,CAACe,QANT,EADF,CAUD,CAhCD,CAkCA,cAAehB,CAAAA,SAAf","sourcesContent":["//https://stackoverflow.com/questions/20926551/recommended-way-of-making-react-component-div-draggable\nimport React, { useState, useEffect, useRef } from 'react'\n\nvar Draggable = props => {\n  const [pressed, setPressed] = useState(false)\n  const [position, setPosition] = useState({x: 0, y: 0})\n  const ref = useRef()\n\n  // Monitor changes to position state and update DOM\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.style.transform = `translate(${position.x}px, ${position.y}px)`\n    }\n  }, [position])\n\n  // Update the current position if mouse is down\n  const onMouseMove = (event) => {\n    if (pressed) {\n      setPosition({\n        x: position.x + event.movementX,\n        y: position.y + event.movementY\n      })\n    }\n  }\n\n  return (\n    <div\n      style={props.style}\n      ref={ ref }\n      onMouseMove={ onMouseMove }\n      onMouseDown={ () => setPressed(true) }\n      onMouseUp={ () => setPressed(false) }>\n      {props.children}\n    </div>\n  )\n}\n\nexport default Draggable"]},"metadata":{},"sourceType":"module"}