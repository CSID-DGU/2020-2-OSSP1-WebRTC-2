{"ast":null,"code":"import _objectSpread from\"/Users/eunyoung/OSSP/2020-2-OSSP1-WebRTC-2-main/conference/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/eunyoung/OSSP/2020-2-OSSP1-WebRTC-2-main/conference/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/eunyoung/OSSP/2020-2-OSSP1-WebRTC-2-main/conference/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/eunyoung/OSSP/2020-2-OSSP1-WebRTC-2-main/conference/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/eunyoung/OSSP/2020-2-OSSP1-WebRTC-2-main/conference/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{Component}from'react';import Video from'./Video';var Videos=/*#__PURE__*/function(_Component){_inherits(Videos,_Component);var _super=_createSuper(Videos);function Videos(props){var _this;_classCallCheck(this,Videos);_this=_super.call(this,props);_this.videoMuted=function(rVideo){var muteTrack=rVideo.getVideoTracks()[0];var isSelectedVideo=rVideo.id===_this.state.selectedVideo.stream.id;if(isSelectedVideo){_this.setState({videoVisible:!muteTrack.muted});}};_this.switchVideo=function(_video){var muteTrack=_video.stream.getVideoTracks()[0];_this.setState({selectedVideo:_video,videoVisible:!muteTrack.muted});};_this.state={rVideos:[],remoteStreams:[],selectedVideo:null,videoVisible:false};return _this;}_createClass(Videos,[{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){var _this2=this;if(this.props.remoteStreams!==nextProps.remoteStreams){var NoOfRemoteStreams=nextProps.remoteStreams.length;var selectedVideo={};if(NoOfRemoteStreams===1)selectedVideo={selectedVideo:nextProps.remoteStreams[0]};else{selectedVideo=this.state.selectedVideo&&nextProps.remoteStreams.filter(function(stream){return stream.id===_this2.state.selectedVideo.id;})||[];selectedVideo=selectedVideo.length?{}:{selectedVideo:nextProps.remoteStreams[NoOfRemoteStreams-1]};}var _rVideos=nextProps.remoteStreams.map(function(rVideo,index){var _videoTrack=rVideo.stream.getTracks().filter(function(track){return track.kind==='video';});// if (_videoTrack.length)\n//   _videoTrack[0].onmute = () => {\n//     alert('muted')\n//   }\nvar video=_videoTrack&&/*#__PURE__*/_jsx(Video,{videoMuted:_this2.videoMuted,videoType:\"remoteVideo\",videoStream:rVideo.stream,frameStyle:{backgroundColor:'#ffffff12',maxWidth:120,maxHeight:120,borderRadius:5,float:'left',margin:'0 3px'},videoStyles:{objectFit:'cover',borderRadius:5,width:120,height:120,maxWidth:120,maxHeight:120}})||/*#__PURE__*/_jsx(\"div\",{});return/*#__PURE__*/_jsx(\"div\",{id:rVideo.name,onClick:function onClick(){return _this2.props.switchVideo(rVideo);},style:{cursor:'pointer',display:'inline-block'},children:video},index);});this.setState(_objectSpread({remoteStreams:nextProps.remoteStreams,rVideos:_rVideos},selectedVideo));}}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Video,{videoType:\"previewVideo\",frameStyle:{zIndex:1,position:'fixed',bottom:0,minWidth:'100%',minHeight:'100%',backgroundColor:'black'},videoStyles:{minWidth:'100%',minHeight:'100%',visibility:this.state.videoVisible&&'visible'||'hidden'},videoStream:this.state.selectedVideo&&this.state.selectedVideo.stream}),/*#__PURE__*/_jsx(\"div\",{style:{zIndex:3,position:'fixed',padding:'6px 3px',backgroundColor:'rgba(0,0,0,0.3)',maxHeight:120,top:'auto',right:10,left:10,bottom:10,overflowX:'scroll',whiteSpace:'nowrap'},children:this.state.rVideos})]});}}]);return Videos;}(Component);export default Videos;","map":{"version":3,"sources":["/Users/eunyoung/OSSP/2020-2-OSSP1-WebRTC-2-main/conference/src/Components/Cam/Videos.js"],"names":["React","Component","Video","Videos","props","videoMuted","rVideo","muteTrack","getVideoTracks","isSelectedVideo","id","state","selectedVideo","stream","setState","videoVisible","muted","switchVideo","_video","rVideos","remoteStreams","nextProps","NoOfRemoteStreams","length","filter","_rVideos","map","index","_videoTrack","getTracks","track","kind","video","backgroundColor","maxWidth","maxHeight","borderRadius","float","margin","objectFit","width","height","name","cursor","display","zIndex","position","bottom","minWidth","minHeight","visibility","padding","top","right","left","overflowX","whiteSpace"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Video from './Video'\n\nclass Videos extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      rVideos: [],\n      remoteStreams: [],\n      selectedVideo: null,\n      videoVisible: false,\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.remoteStreams !== nextProps.remoteStreams) {\n\n      const NoOfRemoteStreams = nextProps.remoteStreams.length\n      \n      let selectedVideo = {}\n\n      if (NoOfRemoteStreams === 1)\n        selectedVideo = { selectedVideo: nextProps.remoteStreams[0] }\n      else {\n        selectedVideo = this.state.selectedVideo && nextProps.remoteStreams.filter(stream => stream.id === this.state.selectedVideo.id) || []\n\n        selectedVideo = selectedVideo.length ? {} : { selectedVideo: nextProps.remoteStreams[NoOfRemoteStreams-1] }\n      }\n\n      let _rVideos = nextProps.remoteStreams.map((rVideo, index) => {\n        const _videoTrack = rVideo.stream.getTracks().filter(track => track.kind === 'video')\n        // if (_videoTrack.length)\n        //   _videoTrack[0].onmute = () => {\n        //     alert('muted')\n        //   }\n        \n        let video = _videoTrack && (\n          <Video\n            videoMuted={this.videoMuted}\n            videoType='remoteVideo'\n            videoStream={rVideo.stream}\n            frameStyle={{\n              backgroundColor: '#ffffff12',\n              maxWidth: 120, maxHeight: 120,\n              borderRadius: 5,\n              float: 'left', margin: '0 3px'\n            }}\n            videoStyles={{\n              objectFit: 'cover',\n              borderRadius: 5,\n              width: 120, height: 120,\n              maxWidth: 120, maxHeight: 120,\n            }}\n          />\n        ) || <div></div>\n\n        return (\n          <div\n            id={rVideo.name}\n            onClick={() => this.props.switchVideo(rVideo)}\n            style={{ \n              cursor: 'pointer' , display: 'inline-block' }}\n            key={index}\n          >\n            {video}\n          </div>\n        )\n      })\n\n      this.setState({\n        remoteStreams: nextProps.remoteStreams,\n        rVideos: _rVideos,\n        ...selectedVideo,\n      })\n    }\n  }\n\n  videoMuted = (rVideo) => {\n    const muteTrack = rVideo.getVideoTracks()[0]\n    const isSelectedVideo = rVideo.id === this.state.selectedVideo.stream.id\n    if (isSelectedVideo) {\n      this.setState({\n        videoVisible: !muteTrack.muted\n      })\n    }\n  }\n\n  switchVideo = (_video) => {\n    const muteTrack = _video.stream.getVideoTracks()[0]\n    this.setState({\n      selectedVideo: _video,\n      videoVisible: !muteTrack.muted\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Video\n          videoType='previewVideo'\n          frameStyle={{\n            zIndex: 1,\n            position: 'fixed',\n            bottom: 0,\n            minWidth: '100%', minHeight: '100%',\n            backgroundColor: 'black'\n          }}\n          videoStyles={{\n            minWidth: '100%', minHeight: '100%',\n            visibility: this.state.videoVisible && 'visible' || 'hidden',\n          }}\n          videoStream={this.state.selectedVideo && this.state.selectedVideo.stream}\n        />\n        <div\n          style={{\n            zIndex: 3,\n            position: 'fixed',\n            padding: '6px 3px',\n            backgroundColor: 'rgba(0,0,0,0.3)',\n            maxHeight: 120,\n            top: 'auto',\n            right: 10,\n            left: 10,\n            bottom: 10,\n            overflowX: 'scroll',\n            whiteSpace: 'nowrap'\n          }}\n        >\n          { this.state.rVideos }\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default Videos"]},"metadata":{},"sourceType":"module"}