{"ast":null,"code":"import _toConsumableArray from\"/Users/eunyoung/OSSP/2020-2-OSSP1-WebRTC-2-main/conference/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/Users/eunyoung/OSSP/2020-2-OSSP1-WebRTC-2-main/conference/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/eunyoung/OSSP/2020-2-OSSP1-WebRTC-2-main/conference/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/eunyoung/OSSP/2020-2-OSSP1-WebRTC-2-main/conference/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/eunyoung/OSSP/2020-2-OSSP1-WebRTC-2-main/conference/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/eunyoung/OSSP/2020-2-OSSP1-WebRTC-2-main/conference/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/eunyoung/OSSP/2020-2-OSSP1-WebRTC-2-main/conference/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{Component}from'react';import io from'socket.io-client';//import './App.css';\n//import Video from './Components/Video/Video'\n//import Videos from './Components/Video/Videos'\nimport Video from'./Video';import Videos from'./Videos';var Cam=/*#__PURE__*/function(_Component){_inherits(Cam,_Component);var _super=_createSuper(Cam);function Cam(props){var _this;_classCallCheck(this,Cam);_this=_super.call(this,props);_this.getLocalStream=function(){// called when getUserMedia() successfully returns - see below\n// getUserMedia() returns a MediaStream object (https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)\nvar success=function success(stream){window.localStream=stream;// this.localVideoref.current.srcObject = stream\n// this.pc.addStream(stream);\n_this.setState({localStream:stream});_this.whoisOnline();};// called when getUserMedia() fails - see below\nvar failure=function failure(e){console.log('getUserMedia Error: ',e);};// https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n// see the above link for more constraint options\nvar constraints={// audio: true,\nvideo:true,// video: {\n//   width: 1280,\n//   height: 720\n// },\n// video: {\n//   width: { min: 1280 },\n// }\noptions:{mirror:true}};// https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\nnavigator.mediaDevices.getUserMedia(constraints).then(success).catch(failure);};_this.whoisOnline=function(){// let all peers know I am joining\n_this.sendToPeer('onlinePeers',null,{local:_this.socket.id});};_this.sendToPeer=function(messageType,payload,socketID){_this.socket.emit(messageType,{socketID:socketID,payload:payload});};_this.createPeerConnection=function(socketID,callback){try{var pc=new RTCPeerConnection(_this.state.pc_config);// add pc to peerConnections object\nvar peerConnections=_objectSpread(_objectSpread({},_this.state.peerConnections),{},_defineProperty({},socketID,pc));_this.setState({peerConnections:peerConnections});pc.onicecandidate=function(e){if(e.candidate){_this.sendToPeer('candidate',e.candidate,{local:_this.socket.id,remote:socketID});}};pc.oniceconnectionstatechange=function(e){// if (pc.iceConnectionState === 'disconnected') {\n//   const remoteStreams = this.state.remoteStreams.filter(stream => stream.id !== socketID)\n//   this.setState({\n//     remoteStream: remoteStreams.length > 0 && remoteStreams[0].stream || null,\n//   })\n// }\n};pc.ontrack=function(e){var remoteVideo={id:socketID,name:socketID,stream:e.streams[0]};_this.setState(function(prevState){// If we already have a stream in display let it stay the same, otherwise use the latest stream\nvar remoteStream=prevState.remoteStreams.length>0?{}:{remoteStream:e.streams[0]};// get currently selected video\nvar selectedVideo=prevState.remoteStreams.filter(function(stream){return stream.id===prevState.selectedVideo.id;});// if the video is still in the list, then do nothing, otherwise set to new video stream\nselectedVideo=selectedVideo.length?{}:{selectedVideo:remoteVideo};return _objectSpread(_objectSpread(_objectSpread({},selectedVideo),remoteStream),{},{remoteStreams:[].concat(_toConsumableArray(prevState.remoteStreams),[remoteVideo])});});};pc.close=function(){// alert('GONE')\n};if(_this.state.localStream)pc.addStream(_this.state.localStream);// return pc\ncallback(pc);}catch(e){console.log('Something went wrong! pc not created!!',e);// return;\ncallback(null);}};_this.componentDidMount=function(){_this.socket=io.connect(_this.serviceIP,{path:'/io/webrtc',query:{}});_this.socket.on('connection-success',function(data){_this.getLocalStream();console.log(data.success);var status=data.peerCount>1?\"Total Connected Peers: \".concat(data.peerCount):'Waiting for other peers to connect';_this.setState({status:status});});_this.socket.on('peer-disconnected',function(data){console.log('peer-disconnected',data);var remoteStreams=_this.state.remoteStreams.filter(function(stream){return stream.id!==data.socketID;});_this.setState(function(prevState){// check if disconnected peer is the selected video and if there still connected peers, then select the first\nvar selectedVideo=prevState.selectedVideo.id===data.socketID&&remoteStreams.length?{selectedVideo:remoteStreams[0]}:null;return _objectSpread({// remoteStream: remoteStreams.length > 0 && remoteStreams[0].stream || null,\nremoteStreams:remoteStreams},selectedVideo);});});// this.socket.on('offerOrAnswer', (sdp) => {\n//   this.textref.value = JSON.stringify(sdp)\n//   // set sdp as remote description\n//   this.pc.setRemoteDescription(new RTCSessionDescription(sdp))\n// })\n_this.socket.on('online-peer',function(socketID){console.log('connected peers ...',socketID);// create and send offer to the peer (data.socketID)\n// 1. Create new pc\n_this.createPeerConnection(socketID,function(pc){// 2. Create Offer\nif(pc)pc.createOffer(_this.state.sdpConstraints).then(function(sdp){pc.setLocalDescription(sdp);_this.sendToPeer('offer',sdp,{local:_this.socket.id,remote:socketID});});});});_this.socket.on('offer',function(data){_this.createPeerConnection(data.socketID,function(pc){pc.addStream(_this.state.localStream);pc.setRemoteDescription(new RTCSessionDescription(data.sdp)).then(function(){// 2. Create Answer\npc.createAnswer(_this.state.sdpConstraints).then(function(sdp){pc.setLocalDescription(sdp);_this.sendToPeer('answer',sdp,{local:_this.socket.id,remote:data.socketID});});});});});_this.socket.on('answer',function(data){// get remote's peerConnection\nvar pc=_this.state.peerConnections[data.socketID];console.log(data.sdp);pc.setRemoteDescription(new RTCSessionDescription(data.sdp)).then(function(){});});_this.socket.on('candidate',function(data){// get remote's peerConnection\nvar pc=_this.state.peerConnections[data.socketID];if(pc)pc.addIceCandidate(new RTCIceCandidate(data.candidate));});// const pc_config = null\n// const pc_config = {\n//   \"iceServers\": [\n//     // {\n//     //   urls: 'stun:[STUN_IP]:[PORT]',\n//     //   'credentials': '[YOR CREDENTIALS]',\n//     //   'username': '[USERNAME]'\n//     // },\n//     {\n//       urls : 'stun:stun.l.google.com:19302'\n//     }\n//   ]\n// }\n// https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\n// create an instance of RTCPeerConnection\n// this.pc = new RTCPeerConnection(this.state.pc_config)\n// triggered when a new candidate is returned\n// this.pc.onicecandidate = (e) => {\n//   // send the candidates to the remote peer\n//   // see addCandidate below to be triggered on the remote peer\n//   if (e.candidate) {\n//     // console.log(JSON.stringify(e.candidate))\n//     this.sendToPeer('candidate', e.candidate)\n//   }\n// }\n// triggered when there is a change in connection state\n// this.pc.oniceconnectionstatechange = (e) => {\n//   console.log(e)\n// }\n// triggered when a stream is added to pc, see below - this.pc.addStream(stream)\n// this.pc.onaddstream = (e) => {\n//   this.remoteVideoref.current.srcObject = e.stream\n// }\n// this.pc.ontrack = (e) => {\n//   debugger\n//   // this.remoteVideoref.current.srcObject = e.streams[0]\n//   this.setState({\n//     remoteStream: e.streams[0]\n//   })\n// }\n};_this.switchVideo=function(_video){console.log(_video);_this.setState({selectedVideo:_video});};_this.state={localStream:null,// used to hold local stream object to avoid recreating the stream everytime a new offer comes\nremoteStream:null,// used to hold remote stream object that is displayed in the main screen\nremoteStreams:[],// holds all Video Streams (all remote streams)\npeerConnections:{},// holds all Peer Connections\nselectedVideo:null,status:'Please wait...',pc_config:{\"iceServers\":[{urls:'stun:stun.l.google.com:19302'}]},sdpConstraints:{'mandatory':{'OfferToReceiveAudio':true,'OfferToReceiveVideo':true}}};// DONT FORGET TO CHANGE TO YOUR URL\n_this.serviceIP='https://3377cdcedd72.ngrok.io/webrtcPeer';// https://reactjs.org/docs/refs-and-the-dom.html\n// this.localVideoref = React.createRef()\n// this.remoteVideoref = React.createRef()\n_this.socket=null;// this.candidates = []\nreturn _this;}_createClass(Cam,[{key:\"render\",value:function render(){console.log(this.state.localStream);var statusText=/*#__PURE__*/_jsx(\"div\",{style:{color:'yellow',padding:5},children:this.state.status});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Video,{videoStyles:{zIndex:2,position:'absolute',right:0,width:200,height:200,margin:5,backgroundColor:'black'}// ref={this.localVideoref}\n,videoStream:this.state.localStream,autoPlay:true,muted:true}),/*#__PURE__*/_jsx(Video,{videoStyles:{zIndex:1,position:'fixed',bottom:0,minWidth:'100%',minHeight:'100%',backgroundColor:'black'}// ref={ this.remoteVideoref }\n,videoStream:this.state.selectedVideo&&this.state.selectedVideo.stream,autoPlay:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{style:{zIndex:3,position:'absolute',margin:10,backgroundColor:'#cdc4ff4f',padding:10,borderRadius:5},children:statusText}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Videos,{switchVideo:this.switchVideo,remoteStreams:this.state.remoteStreams})}),/*#__PURE__*/_jsx(\"br\",{})]});}}]);return Cam;}(Component);export default Cam;","map":{"version":3,"sources":["/Users/eunyoung/OSSP/2020-2-OSSP1-WebRTC-2-main/conference/src/Components/Cam/Cam.js"],"names":["React","Component","io","Video","Videos","Cam","props","getLocalStream","success","stream","window","localStream","setState","whoisOnline","failure","e","console","log","constraints","video","options","mirror","navigator","mediaDevices","getUserMedia","then","catch","sendToPeer","local","socket","id","messageType","payload","socketID","emit","createPeerConnection","callback","pc","RTCPeerConnection","state","pc_config","peerConnections","onicecandidate","candidate","remote","oniceconnectionstatechange","ontrack","remoteVideo","name","streams","prevState","remoteStream","remoteStreams","length","selectedVideo","filter","close","addStream","componentDidMount","connect","serviceIP","path","query","on","data","status","peerCount","createOffer","sdpConstraints","sdp","setLocalDescription","setRemoteDescription","RTCSessionDescription","createAnswer","addIceCandidate","RTCIceCandidate","switchVideo","_video","urls","statusText","color","padding","zIndex","position","right","width","height","margin","backgroundColor","bottom","minWidth","minHeight","borderRadius"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport io from 'socket.io-client'\n//import './App.css';\n\n//import Video from './Components/Video/Video'\n//import Videos from './Components/Video/Videos'\nimport Video from './Video'\nimport Videos from './Videos'\n\nclass Cam extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      localStream: null,    // used to hold local stream object to avoid recreating the stream everytime a new offer comes\n      remoteStream: null,    // used to hold remote stream object that is displayed in the main screen\n\n      remoteStreams: [],    // holds all Video Streams (all remote streams)\n      peerConnections: {},  // holds all Peer Connections\n      selectedVideo: null,\n\n      status: 'Please wait...',\n\n      pc_config: {\n        \"iceServers\": [\n          {\n            urls : 'stun:stun.l.google.com:19302'\n          }\n        ]\n      },\n\n      sdpConstraints: {\n        'mandatory': {\n            'OfferToReceiveAudio': true,\n            'OfferToReceiveVideo': true\n        }\n      },\n    }\n\n    // DONT FORGET TO CHANGE TO YOUR URL\n    this.serviceIP = 'https://3377cdcedd72.ngrok.io/webrtcPeer'\n\n    // https://reactjs.org/docs/refs-and-the-dom.html\n    // this.localVideoref = React.createRef()\n    // this.remoteVideoref = React.createRef()\n\n    this.socket = null\n    // this.candidates = []\n  }\n\n  getLocalStream = () => {\n    // called when getUserMedia() successfully returns - see below\n    // getUserMedia() returns a MediaStream object (https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)\n    const success = (stream) => {\n      window.localStream = stream\n      // this.localVideoref.current.srcObject = stream\n      // this.pc.addStream(stream);\n      this.setState({\n        localStream: stream\n      })\n\n      this.whoisOnline()\n    }\n\n    // called when getUserMedia() fails - see below\n    const failure = (e) => {\n      console.log('getUserMedia Error: ', e)\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n    // see the above link for more constraint options\n    const constraints = {\n      // audio: true,\n      video: true,\n      // video: {\n      //   width: 1280,\n      //   height: 720\n      // },\n      // video: {\n      //   width: { min: 1280 },\n      // }\n      options: {\n        mirror: true,\n      }\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n    navigator.mediaDevices.getUserMedia(constraints)\n      .then(success)\n      .catch(failure)\n  }\n\n  whoisOnline = () => {\n    // let all peers know I am joining\n    this.sendToPeer('onlinePeers', null, {local: this.socket.id})\n  }\n\n  sendToPeer = (messageType, payload, socketID) => {\n    this.socket.emit(messageType, {\n      socketID,\n      payload\n    })\n  }\n\n  createPeerConnection = (socketID, callback) => {\n\n    try {\n      let pc = new RTCPeerConnection(this.state.pc_config)\n\n      // add pc to peerConnections object\n      const peerConnections = { ...this.state.peerConnections, [socketID]: pc }\n      this.setState({\n        peerConnections\n      })\n\n      pc.onicecandidate = (e) => {\n        if (e.candidate) {\n          this.sendToPeer('candidate', e.candidate, {\n            local: this.socket.id,\n            remote: socketID\n          })\n        }\n      }\n\n      pc.oniceconnectionstatechange = (e) => {\n        // if (pc.iceConnectionState === 'disconnected') {\n        //   const remoteStreams = this.state.remoteStreams.filter(stream => stream.id !== socketID)\n\n        //   this.setState({\n        //     remoteStream: remoteStreams.length > 0 && remoteStreams[0].stream || null,\n        //   })\n        // }\n\n      }\n\n      pc.ontrack = (e) => {\n        const remoteVideo = {\n          id: socketID,\n          name: socketID,\n          stream: e.streams[0]\n        }\n\n        this.setState(prevState => {\n\n          // If we already have a stream in display let it stay the same, otherwise use the latest stream\n          const remoteStream = prevState.remoteStreams.length > 0 ? {} : { remoteStream: e.streams[0] }\n\n          // get currently selected video\n          let selectedVideo = prevState.remoteStreams.filter(stream => stream.id === prevState.selectedVideo.id)\n          // if the video is still in the list, then do nothing, otherwise set to new video stream\n          selectedVideo = selectedVideo.length ? {} : { selectedVideo: remoteVideo }\n\n          return {\n            // selectedVideo: remoteVideo,\n            ...selectedVideo,\n            // remoteStream: e.streams[0],\n            ...remoteStream,\n            remoteStreams: [...prevState.remoteStreams, remoteVideo]\n          }\n        })\n      }\n\n      pc.close = () => {\n        // alert('GONE')\n      }\n\n      if (this.state.localStream)\n        pc.addStream(this.state.localStream)\n\n      // return pc\n      callback(pc)\n\n    } catch(e) {\n      console.log('Something went wrong! pc not created!!', e)\n      // return;\n      callback(null)\n    }\n  }\n\n  componentDidMount = () => {\n\n    this.socket = io.connect(\n      this.serviceIP,\n      {\n        path: '/io/webrtc',\n        query: {}\n      }\n    )\n\n    this.socket.on('connection-success', data => {\n\n      this.getLocalStream()\n\n      console.log(data.success)\n      const status = data.peerCount > 1 ? `Total Connected Peers: ${data.peerCount}` : 'Waiting for other peers to connect'\n\n      this.setState({\n        status: status\n      })\n    })\n\n    this.socket.on('peer-disconnected', data => {\n      console.log('peer-disconnected', data)\n\n      const remoteStreams = this.state.remoteStreams.filter(stream => stream.id !== data.socketID)\n\n      this.setState(prevState => {\n        // check if disconnected peer is the selected video and if there still connected peers, then select the first\n        const selectedVideo = prevState.selectedVideo.id === data.socketID && remoteStreams.length ? { selectedVideo: remoteStreams[0] } : null\n\n        return {\n          // remoteStream: remoteStreams.length > 0 && remoteStreams[0].stream || null,\n          remoteStreams,\n          ...selectedVideo,\n        }\n        }\n      )\n    })\n\n    // this.socket.on('offerOrAnswer', (sdp) => {\n\n    //   this.textref.value = JSON.stringify(sdp)\n\n    //   // set sdp as remote description\n    //   this.pc.setRemoteDescription(new RTCSessionDescription(sdp))\n    // })\n\n    this.socket.on('online-peer', socketID => {\n      console.log('connected peers ...', socketID)\n\n      // create and send offer to the peer (data.socketID)\n      // 1. Create new pc\n      this.createPeerConnection(socketID, pc => {\n        // 2. Create Offer\n          if (pc)\n            pc.createOffer(this.state.sdpConstraints)\n              .then(sdp => {\n                pc.setLocalDescription(sdp)\n\n                this.sendToPeer('offer', sdp, {\n                  local: this.socket.id,\n                  remote: socketID\n                })\n          })\n        })\n    })\n\n    this.socket.on('offer', data => {\n      this.createPeerConnection(data.socketID, pc => {\n        pc.addStream(this.state.localStream)\n\n        pc.setRemoteDescription(new RTCSessionDescription(data.sdp)).then(() => {\n          // 2. Create Answer\n          pc.createAnswer(this.state.sdpConstraints)\n            .then(sdp => {\n              pc.setLocalDescription(sdp)\n\n              this.sendToPeer('answer', sdp, {\n                local: this.socket.id,\n                remote: data.socketID\n              })\n            })\n        })\n      })\n    })\n\n    this.socket.on('answer', data => {\n      // get remote's peerConnection\n      const pc = this.state.peerConnections[data.socketID]\n      console.log(data.sdp)\n      pc.setRemoteDescription(new RTCSessionDescription(data.sdp)).then(()=>{})\n    })\n\n    this.socket.on('candidate', (data) => {\n      // get remote's peerConnection\n      const pc = this.state.peerConnections[data.socketID]\n\n      if (pc)\n        pc.addIceCandidate(new RTCIceCandidate(data.candidate))\n    })\n\n    // const pc_config = null\n\n    // const pc_config = {\n    //   \"iceServers\": [\n    //     // {\n    //     //   urls: 'stun:[STUN_IP]:[PORT]',\n    //     //   'credentials': '[YOR CREDENTIALS]',\n    //     //   'username': '[USERNAME]'\n    //     // },\n    //     {\n    //       urls : 'stun:stun.l.google.com:19302'\n    //     }\n    //   ]\n    // }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\n    // create an instance of RTCPeerConnection\n    // this.pc = new RTCPeerConnection(this.state.pc_config)\n\n    // triggered when a new candidate is returned\n    // this.pc.onicecandidate = (e) => {\n    //   // send the candidates to the remote peer\n    //   // see addCandidate below to be triggered on the remote peer\n    //   if (e.candidate) {\n    //     // console.log(JSON.stringify(e.candidate))\n    //     this.sendToPeer('candidate', e.candidate)\n    //   }\n    // }\n\n    // triggered when there is a change in connection state\n    // this.pc.oniceconnectionstatechange = (e) => {\n    //   console.log(e)\n    // }\n\n    // triggered when a stream is added to pc, see below - this.pc.addStream(stream)\n    // this.pc.onaddstream = (e) => {\n    //   this.remoteVideoref.current.srcObject = e.stream\n    // }\n\n    // this.pc.ontrack = (e) => {\n    //   debugger\n    //   // this.remoteVideoref.current.srcObject = e.streams[0]\n\n    //   this.setState({\n    //     remoteStream: e.streams[0]\n    //   })\n    // }\n\n  }\n\n  switchVideo = (_video) => {\n    console.log(_video)\n    this.setState({\n      selectedVideo: _video\n    })\n  }\n\n  render() {\n\n    console.log(this.state.localStream)\n\n    const statusText = <div style={{ color: 'yellow', padding: 5 }}>{this.state.status}</div>\n\n    return (\n      <div>\n        <Video\n          videoStyles={{\n            zIndex:2,\n            position: 'absolute',\n            right:0,\n            width: 200,\n            height: 200,\n            margin: 5,\n            backgroundColor: 'black'\n          }}\n          // ref={this.localVideoref}\n          videoStream={this.state.localStream}\n          autoPlay muted>\n        </Video>\n        <Video\n          videoStyles={{\n            zIndex: 1,\n            position: 'fixed',\n            bottom: 0,\n            minWidth: '100%',\n            minHeight: '100%',\n            backgroundColor: 'black'\n          }}\n          // ref={ this.remoteVideoref }\n          videoStream={this.state.selectedVideo && this.state.selectedVideo.stream}\n          autoPlay>\n        </Video>\n        <br />\n        <div style={{\n          zIndex: 3,\n          position: 'absolute',\n          margin: 10,\n          backgroundColor: '#cdc4ff4f',\n          padding: 10,\n          borderRadius: 5,\n        }}>\n          { statusText }\n        </div>\n        <div>\n          <Videos\n            switchVideo={this.switchVideo}\n            remoteStreams={this.state.remoteStreams}\n          ></Videos>\n        </div>\n        <br />\n\n        {/* <div style={{zIndex: 1, position: 'fixed'}} >\n          <button onClick={this.createOffer}>Offer</button>\n          <button onClick={this.createAnswer}>Answer</button>\n          <br />\n          <textarea style={{ width: 450, height:40 }} ref={ref => { this.textref = ref }} />\n        </div> */}\n        {/* <br />\n        <button onClick={this.setRemoteDescription}>Set Remote Desc</button>\n        <button onClick={this.addCandidate}>Add Candidate</button> */}\n      </div>\n    )\n  }\n}\n\nexport default Cam;"]},"metadata":{},"sourceType":"module"}