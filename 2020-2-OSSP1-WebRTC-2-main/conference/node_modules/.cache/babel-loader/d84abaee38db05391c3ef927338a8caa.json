{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/eunyoung/OSSP/2020-2-OSSP1-WebRTC-2-main/conference/src/Components/Cam/Cam.js\";\nimport React, { Component } from 'react';\nimport io from 'socket.io-client'; //import './App.css';\n\nclass Cam extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.socket = io('/webrtcPeer', {\n        path: '/webrtc',\n        query: {}\n      });\n      this.socket.on('connection-success', success => {\n        console.log(success);\n      });\n      this.socket.on('offerOrAnswer', sdp => {\n        this.textref.value = JSON.stringify(sdp);\n        this.pc.setRemoteDescription(new RTCSessionDescription(sdp));\n      });\n      this.socket.on('candidate', candidate => {\n        //this.candidate = [...this.candidate, candidate]\n        this.pc.addIceCandidate(new RTCIceCandidate(candidate));\n      }); //const pc_config = null\n\n      const pc_config = {\n        \"iceServers\": [// {\n        //     urls : 'stun:[STUN-IP]:[PORT]',\n        //     'credentials':'[YOR CREDENTIALS]',\n        //     'username': '[USERNAME]'\n        // }\n        {\n          urls: 'stun:stun.l.goggle.com:19302'\n        }]\n      };\n      this.pc = new RTCPeerConnection(pc_config);\n\n      this.pc.onicecandidate = e => {\n        if (e.candidate) {\n          this.sendToPeer('candidate', e.candidate);\n        }\n      };\n\n      this.pc.oniceconnectionstatechange = e => {\n        console.log(e);\n      };\n\n      this.pc.onaddstream = e => {\n        this.remoteVideoref.current.srcObject = e.stream;\n      };\n\n      const success = stream => {\n        window.localStream = stream;\n        this.localVideoref.current.srcObject = stream;\n        this.pc.addStream(stream);\n      };\n\n      const failure = e => {\n        console.log('getUserMedia Error: ', e);\n      };\n\n      const constraints = {\n        audio: false,\n        video: true\n      };\n      navigator.mediaDevices.getUserMedia(constraints).then(success).catch(failure);\n    };\n\n    this.sendToPeer = (messageType, payload) => {\n      this.socket.emit(messageType, {\n        socketID: this.socket.id,\n        payload\n      });\n    };\n\n    this.createOffer = () => {\n      console.log('Offer');\n      this.pc.createOffer({\n        offerToReceiveVideo: 1\n      }).then(sdp => {\n        //console.log(JSON.stringify(sdp))\n        this.pc.setLocalDescription(sdp);\n        this.sendToPeer('offerOrAnswer', sdp);\n      });\n    };\n\n    this.createAnswer = () => {\n      console.log('Answer');\n      this.pc.createAnswer({\n        offerToReceiveVideo: 1\n      }).then(sdp => {\n        //console.log(JSON.stringify(sdp))\n        this.pc.setLocalDescription(sdp);\n        this.sendToPeer('offerOrAnswer', sdp);\n      });\n    };\n\n    this.setRemoteDescription = () => {\n      const desc = JSON.parse(this.textref.value);\n      this.pc.setRemoteDescription(new RTCSessionDescription(desc));\n    };\n\n    this.addCandidate = () => {\n      // const candidate = JSON.parse(this.textref.value)\n      // console.log('Adding candidate: ', candidate)\n      // this.pc.addIceCandidate(new RTCIceCandidate(candidate))\n      this.candidates.forEach(candidate => {\n        console.log(JSON.stringify(candidate));\n        this.pc.addIceCandidate(new RTCIceCandidate(this.candidate));\n      });\n    };\n\n    this.localVideoref = /*#__PURE__*/React.createRef();\n    this.remoteVideoref = /*#__PURE__*/React.createRef();\n    this.socket = null;\n    this.candidates = [];\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        style: {\n          width: 240,\n          height: 240,\n          margin: 5,\n          backgroundColor: 'black'\n        },\n        ref: this.localVideoref,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        style: {\n          width: 240,\n          height: 240,\n          margin: 5,\n          backgroundColor: 'black'\n        },\n        ref: this.remoteVideoref,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.createOffer,\n        children: \"Offer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.createAnswer,\n        children: \"Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: ref => {\n          this.textref = ref;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.setRemoteDescription,\n        children: \"Set Remote Desc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addCandidate,\n        children: \"Add Candidate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Cam;","map":{"version":3,"sources":["/Users/eunyoung/OSSP/2020-2-OSSP1-WebRTC-2-main/conference/src/Components/Cam/Cam.js"],"names":["React","Component","io","Cam","constructor","props","componentDidMount","socket","path","query","on","success","console","log","sdp","textref","value","JSON","stringify","pc","setRemoteDescription","RTCSessionDescription","candidate","addIceCandidate","RTCIceCandidate","pc_config","urls","RTCPeerConnection","onicecandidate","e","sendToPeer","oniceconnectionstatechange","onaddstream","remoteVideoref","current","srcObject","stream","window","localStream","localVideoref","addStream","failure","constraints","audio","video","navigator","mediaDevices","getUserMedia","then","catch","messageType","payload","emit","socketID","id","createOffer","offerToReceiveVideo","setLocalDescription","createAnswer","desc","parse","addCandidate","candidates","forEach","createRef","render","width","height","margin","backgroundColor","ref"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport io from 'socket.io-client'\n//import './App.css';\n\nclass Cam extends Component{\n  constructor(props){\n    super(props)\n\n    this.localVideoref = React.createRef()\n    this.remoteVideoref = React.createRef()\n\n    this.socket = null\n    this.candidates = []\n\n  }\n  componentDidMount=()=>{\n    \n    this.socket = io(\n      '/webrtcPeer',\n      {\n        path: '/webrtc',\n        query: {}\n      }\n    )\n\n    this.socket.on('connection-success', success=>{\n      console.log(success)\n    })\n\n    this.socket.on('offerOrAnswer', (sdp)=>{\n      this.textref.value = JSON.stringify(sdp)\n\n      this.pc.setRemoteDescription(new RTCSessionDescription(sdp))\n    })\n\n    this.socket.on('candidate', (candidate) => {\n      //this.candidate = [...this.candidate, candidate]\n      this.pc.addIceCandidate(new RTCIceCandidate(candidate))\n    })\n\n    //const pc_config = null\n\n    const pc_config = {\n      \"iceServers\":[\n          // {\n          //     urls : 'stun:[STUN-IP]:[PORT]',\n          //     'credentials':'[YOR CREDENTIALS]',\n          //     'username': '[USERNAME]'\n          // }\n          {\n              urls : 'stun:stun.l.goggle.com:19302'\n          }\n      ]\n    }\n\n    this.pc = new RTCPeerConnection(pc_config)\n\n    this.pc.onicecandidate = (e) => {\n      if (e.candidate){\n        this.sendToPeer('candidate', e.candidate)\n      } \n    }\n\n    this.pc.oniceconnectionstatechange = (e) => {\n      console.log(e)\n    }\n\n    this.pc.onaddstream = (e) => {\n      this.remoteVideoref.current.srcObject = e.stream\n    }\n\n    const success = (stream) => {\n      window.localStream = stream\n      this.localVideoref.current.srcObject = stream\n      this.pc.addStream(stream)\n    }\n\n    const failure = (e) => {\n      console.log('getUserMedia Error: ', e)\n    }\n\n    const constraints = {\n      audio: false,\n      video: true,\n    }\n\n    navigator.mediaDevices.getUserMedia(constraints)\n    .then(success)\n    .catch(failure)\n\n  }\n\n  sendToPeer = (messageType, payload) => {\n    this.socket.emit(messageType, {\n      socketID: this.socket.id,\n      payload\n    })\n  }\n\n  createOffer = () => {\n    console.log('Offer')\n    this.pc.createOffer({offerToReceiveVideo: 1})\n    .then(sdp => {\n      //console.log(JSON.stringify(sdp))\n      this.pc.setLocalDescription(sdp)\n\n      this.sendToPeer('offerOrAnswer',sdp)\n    })\n  }\n\n  createAnswer = () => {\n    console.log('Answer')\n    this.pc.createAnswer({offerToReceiveVideo: 1})\n    .then(sdp => {\n      //console.log(JSON.stringify(sdp))\n      this.pc.setLocalDescription(sdp)\n\n      this.sendToPeer('offerOrAnswer', sdp)\n    })\n  }\n\n  setRemoteDescription = () => {\n    const desc = JSON.parse(this.textref.value)\n    this.pc.setRemoteDescription(new RTCSessionDescription(desc))\n  }\n\n  addCandidate = () => {\n    // const candidate = JSON.parse(this.textref.value)\n    // console.log('Adding candidate: ', candidate)\n\n    // this.pc.addIceCandidate(new RTCIceCandidate(candidate))\n\n    this.candidates.forEach(candidate => {\n      console.log(JSON.stringify(candidate))\n      this.pc.addIceCandidate(new RTCIceCandidate(this.candidate))\n    });\n  }\n\n  render(){\n\n    return(\n      <div>\n        <video\n          style={{\n            width: 240, height: 240,\n            margin: 5, backgroundColor: 'black'\n          }\n          }\n          ref={this.localVideoref} \n          autoPlay></video>\n        <video\n          style={{\n            width: 240, height: 240,\n            margin: 5, backgroundColor: 'black'\n          }\n          }\n          ref={this.remoteVideoref} \n          autoPlay></video>\n        <br/>\n        <button onClick = {this.createOffer}>Offer</button>\n        <button onClick = {this.createAnswer}>Answer</button>\n        <br/>\n        <textarea ref={ref=>{this.textref = ref}}/>\n        <br/>\n        <button onClick = {this.setRemoteDescription}>Set Remote Desc</button>\n        <button onClick = {this.addCandidate}>Add Candidate</button>\n      </div>\n      \n    );\n  }\n}\n\nexport default Cam;\n"]},"metadata":{},"sourceType":"module"}